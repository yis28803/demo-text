// <auto-generated />
using System;
using Duanmaulan4.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Duanmaulan4.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240222111449_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Duanmaulan4.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDemvaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Duanmaulan4.Models.DIEM", b =>
                {
                    b.Property<int>("STT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("STT"), 1L, 1);

                    b.Property<float>("Diem")
                        .HasColumnType("real");

                    b.Property<int>("MaHocKy")
                        .HasColumnType("int");

                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaNienKhoa")
                        .HasColumnType("int");

                    b.HasKey("STT");

                    b.HasIndex("MaHocKy");

                    b.HasIndex("MaHocSinh");

                    b.HasIndex("MaLoai");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaNienKhoa");

                    b.ToTable("Diem");
                });

            modelBuilder.Entity("Duanmaulan4.Models.GIAOVIEN", b =>
                {
                    b.Property<string>("MaGiaoVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<string>("MaSoThue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonKiemNhiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDemvaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaGiaoVien");

                    b.HasIndex("MaMonHoc")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("GiaoVien");
                });

            modelBuilder.Entity("Duanmaulan4.Models.HANHKIEM", b =>
                {
                    b.Property<int>("MaHanhKiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHanhKiem"), 1L, 1);

                    b.Property<string>("TenHanhKiem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHanhKiem");

                    b.ToTable("HanhKiem");
                });

            modelBuilder.Entity("Duanmaulan4.Models.HOCKY", b =>
                {
                    b.Property<int>("MaHocKy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHocKy"), 1L, 1);

                    b.Property<int>("HeSo")
                        .HasColumnType("int");

                    b.Property<string>("TenHocKy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHocKy");

                    b.ToTable("HocKy");
                });

            modelBuilder.Entity("Duanmaulan4.Models.HOCLUC", b =>
                {
                    b.Property<int>("MaHocLuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHocLuc"), 1L, 1);

                    b.Property<int>("DiemCanDuoi")
                        .HasColumnType("int");

                    b.Property<int>("DiemCanTren")
                        .HasColumnType("int");

                    b.Property<int>("DiemKhongChe")
                        .HasColumnType("int");

                    b.Property<string>("TenHocLuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHocLuc");

                    b.ToTable("HocLuc");
                });

            modelBuilder.Entity("Duanmaulan4.Models.HOCSINH", b =>
                {
                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenPhuHuynh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaPhanCong")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDemvaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaHocSinh");

                    b.HasIndex("MaPhanCong");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("HocSinh");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KETQUA", b =>
                {
                    b.Property<int>("MaKetQua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKetQua"), 1L, 1);

                    b.Property<string>("TenKetQua")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKetQua");

                    b.ToTable("KetQua");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KHOAKHOI", b =>
                {
                    b.Property<int>("MaKhoaKhoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhoaKhoi"), 1L, 1);

                    b.Property<string>("TenKhoaKhoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhoaKhoi");

                    b.ToTable("KhoaKhoi");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KQ_HOCSINH_CANAM", b =>
                {
                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<int>("MaNienKhoa")
                        .HasColumnType("int");

                    b.Property<float>("DiemTBCN")
                        .HasColumnType("real");

                    b.Property<float>("DiemTBHK1")
                        .HasColumnType("real");

                    b.Property<float>("DiemTBHK2")
                        .HasColumnType("real");

                    b.Property<int>("MaHanhKiem")
                        .HasColumnType("int");

                    b.Property<int>("MaHocLuc")
                        .HasColumnType("int");

                    b.Property<int>("MaKetQua")
                        .HasColumnType("int");

                    b.HasKey("MaHocSinh", "MaLop", "MaNienKhoa");

                    b.HasIndex("MaHanhKiem");

                    b.HasIndex("MaHocLuc");

                    b.HasIndex("MaKetQua");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaNienKhoa");

                    b.ToTable("KqHocSinhCaNam");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KQ_HOCSINH_MONHOC", b =>
                {
                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<int>("MaNienKhoa")
                        .HasColumnType("int");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaHocKy")
                        .HasColumnType("int");

                    b.Property<float>("Diem15PhutTB")
                        .HasColumnType("real");

                    b.Property<float>("Diem45PhutTB")
                        .HasColumnType("real");

                    b.Property<float>("DiemMiengTB")
                        .HasColumnType("real");

                    b.Property<float>("DiemTBHK")
                        .HasColumnType("real");

                    b.Property<float>("DiemThi")
                        .HasColumnType("real");

                    b.HasKey("MaHocSinh", "MaLop", "MaNienKhoa", "MaMonHoc", "MaHocKy");

                    b.HasIndex("MaHocKy");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaNienKhoa");

                    b.ToTable("KqHocSinhMonHoc");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KQ_LOPHOC_HOCKY", b =>
                {
                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<int>("MaNienKhoa")
                        .HasColumnType("int");

                    b.Property<int>("MaHocKy")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongDat")
                        .HasColumnType("int");

                    b.Property<float>("TiLe")
                        .HasColumnType("real");

                    b.HasKey("MaLop", "MaNienKhoa", "MaHocKy");

                    b.HasIndex("MaHocKy");

                    b.HasIndex("MaNienKhoa");

                    b.ToTable("KqLopHocHocky");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KQ_LOPHOC_MONHOC", b =>
                {
                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<int>("MaNienKhoa")
                        .HasColumnType("int");

                    b.Property<int>("MaHocKy")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongDat")
                        .HasColumnType("int");

                    b.Property<float>("TiLe")
                        .HasColumnType("real");

                    b.HasKey("MaMonHoc", "MaLop", "MaNienKhoa", "MaHocKy");

                    b.HasIndex("MaHocKy");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaNienKhoa");

                    b.ToTable("KqLopHocMonHoc");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOAIDIEM", b =>
                {
                    b.Property<int>("MaLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoai"), 1L, 1);

                    b.Property<int>("HeSo")
                        .HasColumnType("int");

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoai");

                    b.ToTable("LoaiDiem");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOAIHOCPHI", b =>
                {
                    b.Property<int>("MaLoaiHocPhi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiHocPhi"), 1L, 1);

                    b.Property<string>("TenLoaiHocPhi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiHocPhi");

                    b.ToTable("LoaiHocPhi");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOP", b =>
                {
                    b.Property<int>("MaLop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLop"), 1L, 1);

                    b.Property<int>("HocPhi")
                        .HasColumnType("int");

                    b.Property<int>("MaKhoaKhoi")
                        .HasColumnType("int");

                    b.Property<int>("MaNienKhoa")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongHocSinh")
                        .HasColumnType("int");

                    b.Property<string>("TenLop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaLop");

                    b.HasIndex("MaKhoaKhoi");

                    b.HasIndex("MaNienKhoa");

                    b.ToTable("Lop");
                });

            modelBuilder.Entity("Duanmaulan4.Models.MONHOC", b =>
                {
                    b.Property<int>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMonHoc"), 1L, 1);

                    b.Property<int>("MaKhoaKhoi")
                        .HasColumnType("int");

                    b.Property<int>("MaToBoMon")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonHoc");

                    b.HasIndex("MaKhoaKhoi");

                    b.HasIndex("MaToBoMon");

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("Duanmaulan4.Models.NIENKHOA", b =>
                {
                    b.Property<int>("MaNienKhoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNienKhoa"), 1L, 1);

                    b.Property<string>("TenNienKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNienKhoa");

                    b.ToTable("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANCONG", b =>
                {
                    b.Property<int>("MaPhanCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhanCong"), 1L, 1);

                    b.Property<string>("GioHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaGiaoVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<string>("NgayHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhongHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianBatDau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianKetThuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhanCong");

                    b.HasIndex("MaGiaoVien");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("PhanCong");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANLOP", b =>
                {
                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaPhanCong")
                        .HasColumnType("int");

                    b.Property<int>("PhanLopId")
                        .HasColumnType("int");

                    b.Property<bool>("TinhTrangHocPhi")
                        .HasColumnType("bit");

                    b.HasKey("MaHocSinh", "MaPhanCong");

                    b.HasIndex("MaPhanCong");

                    b.ToTable("PhanLop");
                });

            modelBuilder.Entity("Duanmaulan4.Models.THUHOCPHI", b =>
                {
                    b.Property<int>("MaHocPhi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHocPhi"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLoaiHocPhi")
                        .HasColumnType("int");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<decimal>("MucThuPhi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NgayThuPhi")
                        .HasColumnType("datetime2");

                    b.HasKey("MaHocPhi");

                    b.HasIndex("MaHocSinh");

                    b.HasIndex("MaLoaiHocPhi");

                    b.HasIndex("MaLop");

                    b.ToTable("ThuHocPhi");
                });

            modelBuilder.Entity("Duanmaulan4.Models.TOBOMON", b =>
                {
                    b.Property<int>("MaToBoMon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaToBoMon"), 1L, 1);

                    b.Property<string>("TenToBoMon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaToBoMon");

                    b.ToTable("ToBoMon");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Duanmaulan4.Models.DIEM", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCKY", "HocKy")
                        .WithMany()
                        .HasForeignKey("MaHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.HOCSINH", "HocSinh")
                        .WithMany()
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Duanmaulan4.Models.LOAIDIEM", "LoaiDiem")
                        .WithMany()
                        .HasForeignKey("MaLoai")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.NIENKHOA", "NienKhoa")
                        .WithMany()
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocKy");

                    b.Navigation("HocSinh");

                    b.Navigation("LoaiDiem");

                    b.Navigation("Lop");

                    b.Navigation("MonHoc");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.GIAOVIEN", b =>
                {
                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithOne()
                        .HasForeignKey("Duanmaulan4.Models.GIAOVIEN", "MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("Duanmaulan4.Models.GIAOVIEN", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MonHoc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Duanmaulan4.Models.HOCSINH", b =>
                {
                    b.HasOne("Duanmaulan4.Models.PHANCONG", "PhanCong")
                        .WithMany()
                        .HasForeignKey("MaPhanCong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("Duanmaulan4.Models.HOCSINH", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PhanCong");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KQ_HOCSINH_CANAM", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HANHKIEM", "HanhKiem")
                        .WithMany()
                        .HasForeignKey("MaHanhKiem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.HOCLUC", "HocLuc")
                        .WithMany()
                        .HasForeignKey("MaHocLuc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.HOCSINH", "HocSinh")
                        .WithMany()
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.KETQUA", "KetQua")
                        .WithMany()
                        .HasForeignKey("MaKetQua")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.NIENKHOA", "NienKhoa")
                        .WithMany()
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HanhKiem");

                    b.Navigation("HocLuc");

                    b.Navigation("HocSinh");

                    b.Navigation("KetQua");

                    b.Navigation("Lop");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KQ_HOCSINH_MONHOC", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCKY", "HocKy")
                        .WithMany()
                        .HasForeignKey("MaHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.HOCSINH", "HocSinh")
                        .WithMany()
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.NIENKHOA", "NienKhoa")
                        .WithMany()
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocKy");

                    b.Navigation("HocSinh");

                    b.Navigation("Lop");

                    b.Navigation("MonHoc");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KQ_LOPHOC_HOCKY", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCKY", "HocKy")
                        .WithMany()
                        .HasForeignKey("MaHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.NIENKHOA", "NienKhoa")
                        .WithMany()
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocKy");

                    b.Navigation("Lop");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KQ_LOPHOC_MONHOC", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCKY", "HocKy")
                        .WithMany()
                        .HasForeignKey("MaHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.NIENKHOA", "NienKhoa")
                        .WithMany()
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocKy");

                    b.Navigation("Lop");

                    b.Navigation("MonHoc");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOP", b =>
                {
                    b.HasOne("Duanmaulan4.Models.KHOAKHOI", "KhoaKhoi")
                        .WithMany()
                        .HasForeignKey("MaKhoaKhoi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.NIENKHOA", "NienKhoa")
                        .WithMany()
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhoaKhoi");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.MONHOC", b =>
                {
                    b.HasOne("Duanmaulan4.Models.KHOAKHOI", "KhoaKhoi")
                        .WithMany()
                        .HasForeignKey("MaKhoaKhoi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.TOBOMON", "ToBoMon")
                        .WithMany()
                        .HasForeignKey("MaToBoMon")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhoaKhoi");

                    b.Navigation("ToBoMon");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANCONG", b =>
                {
                    b.HasOne("Duanmaulan4.Models.GIAOVIEN", "GiaoVien")
                        .WithMany()
                        .HasForeignKey("MaGiaoVien")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GiaoVien");

                    b.Navigation("Lop");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANLOP", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCSINH", "HocSinh")
                        .WithMany()
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.PHANCONG", "PhanCong")
                        .WithMany()
                        .HasForeignKey("MaPhanCong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocSinh");

                    b.Navigation("PhanCong");
                });

            modelBuilder.Entity("Duanmaulan4.Models.THUHOCPHI", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCSINH", "HocSinh")
                        .WithMany()
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Duanmaulan4.Models.LOAIHOCPHI", "LoaiHocPhi")
                        .WithMany()
                        .HasForeignKey("MaLoaiHocPhi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocSinh");

                    b.Navigation("LoaiHocPhi");

                    b.Navigation("Lop");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Duanmaulan4.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Duanmaulan4.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Duanmaulan4.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
