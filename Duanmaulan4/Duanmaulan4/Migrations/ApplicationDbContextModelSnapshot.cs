// <auto-generated />
using System;
using Duanmaulan4.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Duanmaulan4.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Duanmaulan4.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDemvaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Duanmaulan4.Models.DIEM", b =>
                {
                    b.Property<int>("MaDiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDiem"), 1L, 1);

                    b.Property<string>("Diem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLoaiDiem")
                        .HasColumnType("int");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaPhanCong")
                        .HasColumnType("int");

                    b.HasKey("MaDiem");

                    b.HasIndex("MaHocSinh");

                    b.HasIndex("MaLoaiDiem");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaPhanCong");

                    b.ToTable("Diem");
                });

            modelBuilder.Entity("Duanmaulan4.Models.GIAOVIEN", b =>
                {
                    b.Property<string>("MaGiaoVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<string>("MaSoThue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonKiemNhiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDemvaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaGiaoVien");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("GiaoVien");
                });

            modelBuilder.Entity("Duanmaulan4.Models.HOCSINH", b =>
                {
                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenPhuHuynh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaPhanCong")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDemvaTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaHocSinh");

                    b.HasIndex("MaPhanCong");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("HocSinh");
                });

            modelBuilder.Entity("Duanmaulan4.Models.KHOAKHOI", b =>
                {
                    b.Property<int>("MaKhoaKhoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhoaKhoi"), 1L, 1);

                    b.Property<string>("TenKhoaKhoi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhoaKhoi");

                    b.ToTable("KhoaKhoi");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LICHHOC", b =>
                {
                    b.Property<int>("MaLichHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichHoc"), 1L, 1);

                    b.Property<int>("MaPhanCong")
                        .HasColumnType("int");

                    b.Property<int?>("PHANCONGMaPhanCong")
                        .HasColumnType("int");

                    b.Property<string>("PhongHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGianHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Thu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLichHoc");

                    b.HasIndex("MaPhanCong");

                    b.HasIndex("PHANCONGMaPhanCong");

                    b.ToTable("LichHoc");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LICHNGHI", b =>
                {
                    b.Property<int>("MaLichNghi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichNghi"), 1L, 1);

                    b.Property<string>("LyDo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLichNghi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLichNghi");

                    b.ToTable("LichNghi");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOAIDIEM", b =>
                {
                    b.Property<int>("MaLoaiDiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiDiem"), 1L, 1);

                    b.Property<int>("HeSo")
                        .HasColumnType("int");

                    b.Property<string>("TenLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiDiem");

                    b.ToTable("LoaiDiem");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOAIHOCPHI", b =>
                {
                    b.Property<int>("MaLoaiHocPhi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiHocPhi"), 1L, 1);

                    b.Property<string>("TenLoaiHocPhi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiHocPhi");

                    b.ToTable("LoaiHocPhi");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOP", b =>
                {
                    b.Property<int>("MaLop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLop"), 1L, 1);

                    b.Property<string>("Hinhanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HocPhi")
                        .HasColumnType("int");

                    b.Property<int>("MaKhoaKhoi")
                        .HasColumnType("int");

                    b.Property<string>("MaLopPhu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNienKhoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongHocSinh")
                        .HasColumnType("int");

                    b.Property<string>("TenLop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaLop");

                    b.HasIndex("MaKhoaKhoi");

                    b.HasIndex("MaNienKhoa");

                    b.ToTable("Lop");
                });

            modelBuilder.Entity("Duanmaulan4.Models.MONHOC", b =>
                {
                    b.Property<int>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMonHoc"), 1L, 1);

                    b.Property<int>("MaKhoaKhoi")
                        .HasColumnType("int");

                    b.Property<string>("MaMonHocPhu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaToBoMon")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonHoc");

                    b.HasIndex("MaKhoaKhoi");

                    b.HasIndex("MaToBoMon");

                    b.ToTable("MonHoc");
                });

            modelBuilder.Entity("Duanmaulan4.Models.MonHocLoaiDiem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("LOAIDIEMMaLoaiDiem")
                        .HasColumnType("int");

                    b.Property<int?>("MONHOCMaMonHoc")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiDiem")
                        .HasColumnType("int");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<string>("MaNienKhoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoCotDiem")
                        .HasColumnType("int");

                    b.Property<int>("SoCotDiemBatBuoc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LOAIDIEMMaLoaiDiem");

                    b.HasIndex("MONHOCMaMonHoc");

                    b.HasIndex("MaLoaiDiem");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaNienKhoa");

                    b.ToTable("MonHocLoaiDiem");
                });

            modelBuilder.Entity("Duanmaulan4.Models.NIENKHOA", b =>
                {
                    b.Property<string>("MaNienKhoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNienKhoaPhu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNienKhoa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNienKhoa");

                    b.ToTable("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANCONG", b =>
                {
                    b.Property<int>("MaPhanCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhanCong"), 1L, 1);

                    b.Property<bool>("ChotDiem")
                        .HasColumnType("bit");

                    b.Property<bool>("ChotLuong")
                        .HasColumnType("bit");

                    b.Property<string>("MaGiaoVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<int>("MaMonHoc")
                        .HasColumnType("int");

                    b.Property<string>("NgayBatDau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayKetThuc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhanCong");

                    b.HasIndex("MaGiaoVien");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("PhanCong");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANLOP", b =>
                {
                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaPhanCong")
                        .HasColumnType("int");

                    b.Property<int>("PhanLopId")
                        .HasColumnType("int");

                    b.Property<bool>("TinhTrangHocPhi")
                        .HasColumnType("bit");

                    b.HasKey("MaHocSinh", "MaPhanCong");

                    b.HasIndex("MaPhanCong");

                    b.ToTable("PhanLop");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHIEULUONG", b =>
                {
                    b.Property<int>("MaPhieuLuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuLuong"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaGiaoVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MonKiemNghiem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayInPhieu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenGiaoVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongDoanhThuKhoaHoc")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TongLuong")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaPhieuLuong");

                    b.HasIndex("MaGiaoVien");

                    b.ToTable("PhieuLuong");
                });

            modelBuilder.Entity("Duanmaulan4.Models.THUHOCPHI", b =>
                {
                    b.Property<int>("MaHocPhi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHocPhi"), 1L, 1);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaHocSinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaLoaiHocPhi")
                        .HasColumnType("int");

                    b.Property<int>("MaLop")
                        .HasColumnType("int");

                    b.Property<decimal>("MucThuPhi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NgayThuPhi")
                        .HasColumnType("datetime2");

                    b.HasKey("MaHocPhi");

                    b.HasIndex("MaHocSinh");

                    b.HasIndex("MaLoaiHocPhi");

                    b.HasIndex("MaLop");

                    b.ToTable("ThuHocPhi");
                });

            modelBuilder.Entity("Duanmaulan4.Models.TOBOMON", b =>
                {
                    b.Property<int>("MaToBoMon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaToBoMon"), 1L, 1);

                    b.Property<string>("TenToBoMon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaToBoMon");

                    b.ToTable("ToBoMon");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Duanmaulan4.Models.DIEM", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCSINH", "HocSinh")
                        .WithMany()
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Duanmaulan4.Models.LOAIDIEM", "LoaiDiem")
                        .WithMany()
                        .HasForeignKey("MaLoaiDiem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.PHANCONG", "PhanCong")
                        .WithMany()
                        .HasForeignKey("MaPhanCong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocSinh");

                    b.Navigation("LoaiDiem");

                    b.Navigation("MonHoc");

                    b.Navigation("PhanCong");
                });

            modelBuilder.Entity("Duanmaulan4.Models.GIAOVIEN", b =>
                {
                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("Duanmaulan4.Models.GIAOVIEN", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("MonHoc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Duanmaulan4.Models.HOCSINH", b =>
                {
                    b.HasOne("Duanmaulan4.Models.PHANCONG", "PhanCong")
                        .WithMany()
                        .HasForeignKey("MaPhanCong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.ApplicationUser", "User")
                        .WithOne()
                        .HasForeignKey("Duanmaulan4.Models.HOCSINH", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PhanCong");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LICHHOC", b =>
                {
                    b.HasOne("Duanmaulan4.Models.PHANCONG", "PhanCong")
                        .WithMany()
                        .HasForeignKey("MaPhanCong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.PHANCONG", null)
                        .WithMany("LichHoc")
                        .HasForeignKey("PHANCONGMaPhanCong");

                    b.Navigation("PhanCong");
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOP", b =>
                {
                    b.HasOne("Duanmaulan4.Models.KHOAKHOI", "KhoaKhoi")
                        .WithMany()
                        .HasForeignKey("MaKhoaKhoi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.NIENKHOA", "NienKhoa")
                        .WithMany()
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("KhoaKhoi");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.MONHOC", b =>
                {
                    b.HasOne("Duanmaulan4.Models.KHOAKHOI", "KhoaKhoi")
                        .WithMany()
                        .HasForeignKey("MaKhoaKhoi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.TOBOMON", "ToBoMon")
                        .WithMany()
                        .HasForeignKey("MaToBoMon")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhoaKhoi");

                    b.Navigation("ToBoMon");
                });

            modelBuilder.Entity("Duanmaulan4.Models.MonHocLoaiDiem", b =>
                {
                    b.HasOne("Duanmaulan4.Models.LOAIDIEM", null)
                        .WithMany("MonHocLoaiDiems")
                        .HasForeignKey("LOAIDIEMMaLoaiDiem");

                    b.HasOne("Duanmaulan4.Models.MONHOC", null)
                        .WithMany("MonHocLoaiDiems")
                        .HasForeignKey("MONHOCMaMonHoc");

                    b.HasOne("Duanmaulan4.Models.LOAIDIEM", "LoaiDiem")
                        .WithMany()
                        .HasForeignKey("MaLoaiDiem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.NIENKHOA", "NienKhoa")
                        .WithMany()
                        .HasForeignKey("MaNienKhoa")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LoaiDiem");

                    b.Navigation("MonHoc");

                    b.Navigation("NienKhoa");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANCONG", b =>
                {
                    b.HasOne("Duanmaulan4.Models.GIAOVIEN", "GiaoVien")
                        .WithMany()
                        .HasForeignKey("MaGiaoVien")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.MONHOC", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GiaoVien");

                    b.Navigation("Lop");

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANLOP", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCSINH", "HocSinh")
                        .WithMany()
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.PHANCONG", "PhanCong")
                        .WithMany()
                        .HasForeignKey("MaPhanCong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocSinh");

                    b.Navigation("PhanCong");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHIEULUONG", b =>
                {
                    b.HasOne("Duanmaulan4.Models.GIAOVIEN", "GiaoVien")
                        .WithMany()
                        .HasForeignKey("MaGiaoVien")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GiaoVien");
                });

            modelBuilder.Entity("Duanmaulan4.Models.THUHOCPHI", b =>
                {
                    b.HasOne("Duanmaulan4.Models.HOCSINH", "HocSinh")
                        .WithMany()
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Duanmaulan4.Models.LOAIHOCPHI", "LoaiHocPhi")
                        .WithMany()
                        .HasForeignKey("MaLoaiHocPhi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.LOP", "Lop")
                        .WithMany()
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HocSinh");

                    b.Navigation("LoaiHocPhi");

                    b.Navigation("Lop");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Duanmaulan4.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Duanmaulan4.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duanmaulan4.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Duanmaulan4.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duanmaulan4.Models.LOAIDIEM", b =>
                {
                    b.Navigation("MonHocLoaiDiems");
                });

            modelBuilder.Entity("Duanmaulan4.Models.MONHOC", b =>
                {
                    b.Navigation("MonHocLoaiDiems");
                });

            modelBuilder.Entity("Duanmaulan4.Models.PHANCONG", b =>
                {
                    b.Navigation("LichHoc");
                });
#pragma warning restore 612, 618
        }
    }
}
